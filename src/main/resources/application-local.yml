spring:
  config:
    activate:
      on-profile: local
  cloud:
    gateway:
      httpclient:
        connect-timeout: 50000
        response-timeout: 50000

        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
        globalcors:
          cors-configurations:
            '[/**]':
              allowedOrigins:
                - 'http://localhost:3000'
              allow-credentials: true
              allowedHeaders: '*'
              allowedMethods:
                - PUT
                - GET
                - POST
                - DELETE
                - PATCH
                - OPTIONS
      routes:
        #user service쪽 Gateway filter설정
        #/users/email/~~로 시작되는 uri들은 비로그인 상태에서도 접근가능해서 /**로 설정함
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/email/**
            - Method=GET
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/certnum/check
            - Method=GET
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/nickname/check
            - Method=GET
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/join
            - Method=POST
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/login
            - Method=POST
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/join
            - Method=POST
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
            - Path=/api/v1/users/password
            - Method=PUT
        #address쪽은 무조건 회원만 접근가능해서 address로 시작되면 무조건 filter로 검증
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/v1/users/address/**
            - Method=GET,POST
            - AuthorizationUserHeaderFilter
        #client service쪽 Gateway filter설정
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
            - Path=/api/v1/client/login
            - Method=POST
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
            - Path=/api/v1/client/join
            - Method=POST
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
            - Path=/api/v1/client/password
            - Method=PUT
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
            - Path=/api/v1/client/email/**
            - Method=GET
        - id: client-service
          uri: lb://CLIENT-SERVICE
          predicates:
              - Path=/api/v1/client/service
              - Method=GET
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/v1/payment/**
            - Method=GET,POST
        - id: reservation-service
          uri: lb://RESERVATION-SERVICE
          predicates:
            - Path=/api/v1/reservation/**
        - id: admin-service
          uri: lb://ADMIN-SERVICE
          predicates:
            - Path=/api/v1/admin/**
        - id : review-bookmark-service
          uri: lb://REVIEW-BOOKMARK-SERVICE
          predicates:
            - Path=/api/v1/review-bookmark/**
        - id : settle-service
          uri : lb://SETTLE-SERVICE
          predicates:
            - Path=/api/v1/settle/**
        - id : auth-service
          uri : lb://AUTH-SERVICE
          predicates:
            - Path=/api/v1/auth/**
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
JWT:
  secret-key: wooyanofightingsecretjwtwooyanofightingsecretjwtbye